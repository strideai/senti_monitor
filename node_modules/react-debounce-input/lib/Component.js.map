{"version":3,"sources":["../src/Component.js"],"names":["DebounceInput","createClass","propTypes","element","PropTypes","oneOfType","string","func","type","onChange","isRequired","onKeyDown","onBlur","value","number","minLength","debounceTimeout","forceNotifyByEnter","bool","forceNotifyOnBlur","getDefaultProps","getInitialState","props","componentWillMount","createNotifier","componentWillReceiveProps","isDebouncing","state","setState","shouldComponentUpdate","componentWillUnmount","notify","flush","doNotify","debouncedChangeFunc","event","forceNotify","cancel","length","target","persist","oldValue","render","_onChange","_value","_minLength","_debounceTimeout","maybeOnKeyDown","key","maybeOnBlur","createElement"],"mappings":"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","file":"Component.js","sourcesContent":["import React from 'react';\nimport debounce from 'lodash.debounce';\nimport {shouldComponentUpdate} from 'react/lib/ReactComponentWithPureRenderMixin';\n\n\nexport const DebounceInput = React.createClass({\n  propTypes: {\n    element: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.func]),\n    type: React.PropTypes.string,\n    onChange: React.PropTypes.func.isRequired,\n    onKeyDown: React.PropTypes.func,\n    onBlur: React.PropTypes.func,\n    value: React.PropTypes.oneOfType([\n      React.PropTypes.string,\n      React.PropTypes.number\n    ]),\n    minLength: React.PropTypes.number,\n    debounceTimeout: React.PropTypes.number,\n    forceNotifyByEnter: React.PropTypes.bool,\n    forceNotifyOnBlur: React.PropTypes.bool\n  },\n\n\n  getDefaultProps() {\n    return {\n      element: 'input',\n      type: 'text',\n      minLength: 0,\n      debounceTimeout: 100,\n      forceNotifyByEnter: true,\n      forceNotifyOnBlur: true\n    };\n  },\n\n\n  getInitialState() {\n    return {\n      value: this.props.value || ''\n    };\n  },\n\n\n  componentWillMount() {\n    this.createNotifier(this.props.debounceTimeout);\n  },\n\n\n  componentWillReceiveProps({value, debounceTimeout}) {\n    if (this.isDebouncing) {\n      return;\n    }\n    if (typeof value !== 'undefined' && this.state.value !== value) {\n      this.setState({value});\n    }\n    if (debounceTimeout !== this.props.debounceTimeout) {\n      this.createNotifier(debounceTimeout);\n    }\n  },\n\n\n  shouldComponentUpdate,\n\n\n  componentWillUnmount() {\n    if (this.notify.flush) {\n      this.notify.flush();\n    }\n  },\n\n  isDebouncing: false,\n\n  createNotifier(debounceTimeout) {\n    if (debounceTimeout < 0) {\n      this.notify = () => null;\n    } else if (debounceTimeout === 0) {\n      this.notify = this.doNotify;\n    } else {\n      const debouncedChangeFunc = debounce(event => {\n        this.isDebouncing = false;\n        this.doNotify(event);\n      }, debounceTimeout);\n\n      this.notify = event => {\n        this.isDebouncing = true;\n        debouncedChangeFunc(event);\n      };\n    }\n  },\n\n  doNotify(...args) {\n    const {onChange} = this.props;\n\n    onChange(...args);\n  },\n\n\n  forceNotify(event) {\n    if (!this.isDebouncing) {\n      return;\n    }\n\n    if (this.notify.cancel) {\n      this.notify.cancel();\n      this.isDebouncing = false;\n    }\n\n    const {value} = this.state;\n    const {minLength} = this.props;\n\n    if (value.length >= minLength) {\n      this.doNotify(event);\n    } else {\n      this.doNotify({...event, target: {...event.target, value}});\n    }\n  },\n\n\n  onChange(event) {\n    event.persist();\n\n    const oldValue = this.state.value;\n\n    this.setState({value: event.target.value}, () => {\n      const {value} = this.state;\n\n      if (value.length >= this.props.minLength) {\n        this.notify(event);\n        return;\n      }\n\n      // If user hits backspace and goes below minLength consider it cleaning the value\n      if (oldValue.length > value.length) {\n        this.notify({...event, target: {...event.target, value: ''}});\n      }\n    });\n  },\n\n\n  render() {\n    const {\n      element,\n      onChange: _onChange,\n      value: _value,\n      minLength: _minLength,\n      debounceTimeout: _debounceTimeout,\n      forceNotifyByEnter,\n      forceNotifyOnBlur,\n      onKeyDown,\n      onBlur,\n      ...props\n    } = this.props;\n\n    const maybeOnKeyDown = forceNotifyByEnter ? {\n      onKeyDown: event => {\n        if (event.key === 'Enter') {\n          this.forceNotify(event);\n        }\n        // Invoke original onKeyDown if present\n        if (onKeyDown) {\n          onKeyDown(event);\n        }\n      }\n    } : {};\n\n    const maybeOnBlur = forceNotifyOnBlur ? {\n      onBlur: event => {\n        this.forceNotify(event);\n        // Invoke original onBlur if present\n        if (onBlur) {\n          onBlur(event);\n        }\n      }\n    } : {};\n\n\n    return React.createElement(element, {\n      ...props,\n      onChange: this.onChange,\n      value: this.state.value,\n      ...maybeOnKeyDown,\n      ...maybeOnBlur\n    });\n  }\n});\n"]}